
第1章　概述　
　1.1　MATLAB产品简介　
　1.2　基于模型的设计思想　
　　1.2.1　系统设计的基本过程　
　　1.2.2　传统设计手段的缺陷　
　　1.2.3　基于模型的设计优势　
　1.3　Simulink回顾　
　　1.3.1　创建Simulink模型　
　　1.3.2　参数设置与Model　Explorer　
　　1.3.3　创建子系统　
　1.4　Stateflow概述　
　1.5　安装配置Stateflow　
　1.6　本章小结　
第2章　创建状态图　
　2.1　Stateflow编辑器　
　　2.1.1　创建Simulink模型　
　　2.1.2　Stateflow编辑器概览　
　2.2　创建和编辑状态图　
　　2.2.1　插入图形对象　
　　2.2.2　编辑图形对象外观　
　2.3　本章小结　
第3章　状态图的仿真　
　3.1　状态图的基本概念　
　3.2　事件　
　　3.2.1　添加事件　
　　3.2.2　使用多个输入事件　
　　3.2.3　默认转移的注意事项　
　3.3　数据对象　
　　3.3.1　添加数据对象　
　　3.3.2　数据对象的属性　
　　3.3.3　使用非标量的数据对象　
　　3.3.4　设置数据对象的数据类型　
　3.4　状态图的更新模式　
　3.5　Stateflow模型查看器　
　　3.5.1　启动Stateflow模型查看器　
　　3.5.2　查看并修改对象属性　
　　3.5.3　增加新的非图形对象　
　3.6　本章小结　
第4章　流程图　
　4.1　转移冲突　
　　4.1.1　转移冲突的产生与默认处理　
　　4.1.2　用户自定义检测次序　
　4.2　流程图的创建　
　　4.2.1　常用逻辑结构模型　
　　4.2.2　流程图的回溯现象　
　　4.2.3　流程图应用实例　
　4.3　图形函数　
　　4.3.1　状态中的流程图　
　　4.3.2　创建图形函数　
　　4.3.3　应用实例　
　4.4　Stateflow调试器　
　　4.4.1　启动调试器　
　　4.4.2　设置断点　
　　4.4.3　调试过程　
　4.5　本章小结　
第5章　有限状态系统――层次化建模　
　5.1　状态图回顾　
　5.2　状态动作深入　
　　5.2.1　状态动作的分类　
　　5.2.2　动作的执行次序　
　　5.2.3　在动作中使用事件　
　5.3　层次化建模　
　　5.3.1　层次化模型的构成　
　　5.3.2　层次化状态图的转移　
　　5.3.3　历史节点　
　　5.3.4　内部转移　
　　5.3.5　层次化模型的转移检测优先权　
　　5.3.6　本地数据对象　
　5.4　子状态图　
　　5.4.1　使用组合的状态　
　　5.4.2　创建子状态图　
　　5.4.3　子状态图的超转移　
　5.5　Stateflow查询工具　
　5.6　本章小结　
第6章　有限状态系统――并行机制　
第7章　Stateflow　Coder目标编译　
第8章　可复用图形结构　
第9章　Stateflow　API　
附录A　MATLAB可用的LaTex字符集　
附录B　Stateflow对象层次　
附录C　Stateflow语法小结　
附录D　Stateflow动作语言　
附录E　Embedded　MATLAB语言　
附录F　SimEvents简介　
参考文献 
